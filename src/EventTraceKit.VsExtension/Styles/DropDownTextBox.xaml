<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
                    xmlns:c="clr-namespace:EventTraceKit.VsExtension.Controls">
  <Geometry x:Key="DownArrowGeometry">M 0 0 L 3 3 L 6 0 Z</Geometry>

  <Style x:Key="DropDownTextBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="AllowDrop" Value="True"/>
    <Setter Property="MinWidth" Value="0"/>
    <Setter Property="MinHeight" Value="0"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="Transparent"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="DropDownTextBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="ClickMode" Value="Press"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="Border" Property="Panel.Background" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphBackgroundPressedBrushKey}}"/>
              <Setter TargetName="Border" Property="Border.BorderBrush" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxSeparatorPressedBrushKey}}"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphPressedBrushKey}}"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Border" Property="Panel.Background" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphBackgroundPressedBrushKey}}"/>
              <Setter TargetName="Border" Property="Border.BorderBrush" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxSeparatorPressedBrushKey}}"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphPressedBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
          <Grid Background="Transparent">
            <Border x:Name="Border" Width="13" HorizontalAlignment="Right" Background="{TemplateBinding Background}" BorderThickness="1,0,0,0" BorderBrush="{TemplateBinding Border.BorderBrush}" SnapsToDevicePixels="True">
              <Path x:Name="Arrow" Margin="0,1,0,0" Fill="{TemplateBinding Foreground}" Data="{StaticResource DownArrowGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type c:DropDownTextBox}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxTextBrushKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="MinHeight" Value="21"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type c:DropDownTextBox}">
          <Border x:Name="Border" BorderThickness="1"
                  BorderBrush="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxBorderBrushKey}}"
                  Background="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxBackgroundBrushKey}}">
            <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Placement="Bottom"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                     PlacementTarget="{Binding ElementName=Border}"
                     IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                     StaysOpen="True">
                <vs:SystemDropShadowChrome x:Name="Shdw" vs:Color="Transparent" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Border}">
                  <Border x:Name="DropDownBorder"
                          Background="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxListBackgroundBrushKey}}"
                          BorderBrush="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxListBorderBrushKey}}"
                          BorderThickness="1"
                          Margin="0,1,0,0">
                    <ScrollViewer>
                      <ContentPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                        ContentSource="DropDownContent"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                  </Border>
                </vs:SystemDropShadowChrome>
              </Popup>
              <TextBox x:Name="PART_TextBox" Grid.Column="0" Margin="0"
                       Style="{StaticResource DropDownTextBoxEditableTextBox}"
                       Foreground="{TemplateBinding Foreground}"
                       SelectionBrush="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxTextInputSelectionBrushKey}}"
                       VerticalAlignment="Center"
                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                       CaretBrush="{Binding Foreground, RelativeSource={RelativeSource Self}}"
                       IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
              <ToggleButton x:Name="ToggleButton" Grid.Column="1"
                            Background="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphBackgroundBrushKey}}"
                            BorderBrush="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxSeparatorBrushKey}}"
                            Foreground="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphBrushKey}}"
                            Style="{StaticResource DropDownTextBoxToggleButton}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxSeparatorFocusedBrushKey}}"/>
              <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphBackgroundFocusedBrushKey}}"/>
              <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphFocusedBrushKey}}"/>
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxBackgroundFocusedBrushKey}}"/>
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxBorderFocusedBrushKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxTextFocusedBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxSeparatorHoverBrushKey}}"/>
              <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphBackgroundHoverBrushKey}}"/>
              <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphHoverBrushKey}}"/>
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxBackgroundHoverBrushKey}}"/>
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxBorderHoverBrushKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxTextHoverBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxBackgroundPressedBrushKey}}"/>
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxBorderPressedBrushKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxTextPressedBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ToggleButton" Property="BorderBrush" Value="Transparent"/>
              <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphBackgroundDisabledBrushKey}}"/>
              <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxGlyphDisabledBrushKey}}"/>
              <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxBorderDisabledBrushKey}}"/>
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxBackgroundDisabledBrushKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxTextDisabledBrushKey}}"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding (Popup.HasDropShadow), ElementName=PART_Popup}" Value="True"/>
                <Condition Binding="{Binding AreGradientsAllowed, Source={x:Static vs:EnvironmentRenderCapabilities.Current}}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="Color" Value="{DynamicResource {x:Static vs:CommonControlsColors.ComboBoxListBackgroundShadowColorKey}}"/>
            </MultiDataTrigger>
            <DataTrigger Value="False" Binding="{Binding AreAnimationsAllowed, Source={x:Static vs:EnvironmentRenderCapabilities.Current}}">
              <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
