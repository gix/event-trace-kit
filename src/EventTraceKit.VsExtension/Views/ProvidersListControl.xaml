<c:ThemedUserControl
  x:Class="EventTraceKit.VsExtension.Views.ProvidersListControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:c="clr-namespace:EventTraceKit.VsExtension.Controls"
  xmlns:v="clr-namespace:EventTraceKit.VsExtension.Views"
  xmlns:w="clr-namespace:EventTraceKit.VsExtension.Windows"
  xmlns:vsi="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
  xmlns:vsic="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
  mc:Ignorable="d"
  d:DataContext="{d:DesignInstance {x:Type v:EventCollectorViewModel}, d:IsDesignTimeCreatable=False}"
  d:DesignWidth="300"
  d:DesignHeight="300">
  <FrameworkElement.Resources>
    <CollectionViewSource x:Key="SortedProviders" Source="{Binding Providers}"
                          IsLiveSortingRequested="True">
      <CollectionViewSource.SortDescriptions>
        <cm:SortDescription PropertyName="Name"/>
      </CollectionViewSource.SortDescriptions>
      <CollectionViewSource.LiveSortingProperties>
        <system:String>Name</system:String>
      </CollectionViewSource.LiveSortingProperties>
    </CollectionViewSource>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <DataTemplate DataType="{x:Type v:EventProviderViewModel}">
      <c:ToggleContentControl Height="20"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              HorizontalContentAlignment="Stretch"
                              VerticalContentAlignment="Center"
                              IsChecked="{Binding IsInRenamingingMode}">
        <c:ToggleContentControl.ContextMenu>
          <ContextMenu>
            <MenuItem Command="v:ExtensionCommands.Toggle"/>
            <Separator/>
            <MenuItem Command="ApplicationCommands.Cut"/>
            <MenuItem Command="ApplicationCommands.Copy"/>
            <MenuItem Command="ApplicationCommands.Paste"/>
            <MenuItem Command="ApplicationCommands.Delete"/>
            <MenuItem Command="v:ExtensionCommands.Rename"/>
          </ContextMenu>
        </c:ToggleContentControl.ContextMenu>
        <c:ToggleContentControl.UncheckedTemplate>
          <DataTemplate>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" MinHeight="20">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <CheckBox IsChecked="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                        VerticalAlignment="Center" Margin="1"/>
              <TextBlock Grid.Column="1" Margin="3,1,1,1" TextTrimming="CharacterEllipsis"
                         Text="{Binding DisplayName, Mode=OneWay}" VerticalAlignment="Center"/>
              <Button Grid.Column="2" Command="{Binding SwitchToRenamingModeCommand}"
                      ToolTip="Rename" Style="{DynamicResource ImageButton}"
                      VerticalAlignment="Center" Width="20" Height="20"
                      Visibility="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <vsi:CrispImage Moniker="{x:Static vsic:KnownMonikers.Edit}"
                                Width="16" Height="16" Stretch="Uniform"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
              </Button>
            </Grid>
          </DataTemplate>
        </c:ToggleContentControl.UncheckedTemplate>
        <c:ToggleContentControl.CheckedTemplate>
          <DataTemplate>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid.InputBindings>
                <KeyBinding Key="Enter" Command="{Binding SaveAndSwitchFromRenamingModeCommand}"/>
                <KeyBinding Key="Escape" Command="{Binding DiscardAndSwitchFromRenamingModeCommand}"/>
              </Grid.InputBindings>
              <TextBox Grid.Column="0"
                       Text="{Binding NewName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}"
                       Margin="1" Padding="0"
                       TextAlignment="Left"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       HorizontalContentAlignment="Stretch"
                       VerticalContentAlignment="Center"
                       HorizontalScrollBarVisibility="Hidden"
                       IsUndoEnabled="True"
                       AcceptsReturn="False"
                       AcceptsTab="False"
                       AllowDrop="False"
                       Loaded="ProviderNameTextBox_OnLoaded"/>
            </Grid>
          </DataTemplate>
        </c:ToggleContentControl.CheckedTemplate>
      </c:ToggleContentControl>
    </DataTemplate>
  </FrameworkElement.Resources>

  <!-- This list must be focusable via tab navigation and mouse clicks since it
       supports pasting and may be empty. -->
  <ListBox x:Name="ProvidersListBox"
           ItemsSource="{Binding Source={StaticResource SortedProviders}}"
           BorderThickness="1"
           SelectionMode="Extended"
           SelectedItem="{Binding SelectedProvider}"
           SelectionChanged="OnSelectionChanged"
           ScrollViewer.HorizontalScrollBarVisibility="Disabled"
           Focusable="True"
           IsTabStop="True"
           MouseDown="ProvidersListBox_OnMouseDown">
    <b:Interaction.Behaviors>
      <w:CommandBridge SourceCommand="ApplicationCommands.Cut"
                       TargetCommand="{Binding CutProvidersCommand}"/>
      <w:CommandBridge SourceCommand="ApplicationCommands.Copy"
                       TargetCommand="{Binding CopyProvidersCommand}"/>
      <w:CommandBridge SourceCommand="ApplicationCommands.Paste"
                       TargetCommand="{Binding PasteProvidersCommand}"/>
      <w:CommandBridge SourceCommand="ApplicationCommands.Delete"
                       TargetCommand="{Binding RemoveProvidersCommand}"/>
      <w:CommandBridge SourceCommand="v:ExtensionCommands.Toggle"
                       TargetCommand="{Binding ToggleProvidersCommand}"/>
      <w:CommandBridge SourceCommand="v:ExtensionCommands.Rename"
                       TargetCommand="{Binding SelectedProvider.SwitchToRenamingModeCommand}"/>
    </b:Interaction.Behaviors>
    <ListBox.ItemContainerStyle>
      <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
      </Style>
    </ListBox.ItemContainerStyle>
  </ListBox>
</c:ThemedUserControl>
