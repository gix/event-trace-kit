<c:ThemedDialogWindow
  x:Class="EventTraceKit.VsExtension.Views.TraceSettingsWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:c="clr-namespace:EventTraceKit.VsExtension.Controls"
  xmlns:etkv="clr-namespace:EventTraceKit.VsExtension.Views"
  xmlns:etkw="clr-namespace:EventTraceKit.VsExtension.Windows"
  xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
  xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
  xmlns:vsic="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
  mc:Ignorable="d"
  d:DataContext="{d:DesignInstance {x:Type etkv:TraceSettingsDesignTimeModel}, d:IsDesignTimeCreatable=True}"
  Title="{Binding Title}"
  MinWidth="700"
  MinHeight="450"
  Width="1000"
  Height="700"
  WindowStartupLocation="CenterOwner"
  ShowInTaskbar="False">
  <i:Interaction.Behaviors>
    <etkw:BindableDialogResult Binding="{Binding DialogResult}"/>
  </i:Interaction.Behaviors>
  <Grid>
    <Grid.Resources>
      <!-- Resources are placed into the Grid instead of the top-level Window
           so they can properly inherit from the Window's themed styles.
           Normally the Application resource dictionary would be used but this
           is not possible when hosted in Visual Studio. -->

      <DataTemplate DataType="{x:Type etkv:EventProviderViewModel}">
        <etkv:EventProviderEditControl/>
      </DataTemplate>

      <DataTemplate DataType="{x:Type etkv:TraceProfileViewModel}">
        <!--
        <DockPanel>
          <Border DockPanel.Dock="Top"
                  Background="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarGradientBrushKey}}">
            <StackPanel Margin="8" Orientation="Horizontal">
              <StackPanel.Resources>
                <CollectionViewSource x:Key="SortedCollectors" Source="{Binding Collectors}"
                                      IsLiveSortingRequested="True">
                  <CollectionViewSource.SortDescriptions>
                    <cm:SortDescription PropertyName="Name"/>
                  </CollectionViewSource.SortDescriptions>
                  <CollectionViewSource.LiveSortingProperties>
                    <system:String>Name</system:String>
                  </CollectionViewSource.LiveSortingProperties>
                </CollectionViewSource>
              </StackPanel.Resources>
              <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" MinWidth="250"/>
              <TextBlock Margin="7,1,1,1" VerticalAlignment="Center" FontWeight="Bold">Collectors</TextBlock>
              <ComboBox Margin="7,1,1,1" ItemsSource="{Binding Source={StaticResource SortedCollectors}}"
                        SelectedItem="{Binding SelectedCollector}" MinWidth="250">
                <ComboBox.ItemTemplate>
                  <DataTemplate DataType="{x:Type etkv:TraceProfileViewModel}">
                    <TextBlock Text="{Binding Name}"/>
                  </DataTemplate>
                </ComboBox.ItemTemplate>
              </ComboBox>
              <Button Margin="7,1,1,1" Content="Add/Remove System Collector"
                      Command="{Binding AddOrRemoveSystemCollectorCommand}"/>
            </StackPanel>
          </Border>
          <ContentControl Content="{Binding SelectedCollector}" Focusable="False"/>
        </DockPanel>
        -->
        <ContentControl Content="{Binding SelectedCollector}" Focusable="False"/>
      </DataTemplate>

      <DataTemplate DataType="{x:Type etkv:SystemCollectorViewModel}">
        <DockPanel>
          <Border DockPanel.Dock="Top" Background="#08000000" Padding="8,4">
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="{Binding Name}" MinWidth="250"/>
            </StackPanel>
          </Border>
          <Grid Margin="8">
            <ItemsControl ItemsSource="{Binding KernelFlags}">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Grid Margin="3">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="200"/>
                      <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <CheckBox IsChecked="{Binding IsEnabled}" Content="{Binding Name}"/>
                    <TextBlock Grid.Column="1" Text="{Binding Description}"/>
                  </Grid>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </Grid>
        </DockPanel>
      </DataTemplate>

      <DataTemplate DataType="{x:Type etkv:EventCollectorViewModel}">
        <DockPanel>
          <Border DockPanel.Dock="Top" Background="#08000000" Padding="8,4">
            <Expander>
              <Expander.Header>
                <StackPanel Orientation="Horizontal">
                  <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" MinWidth="250"/>
                  <Button Margin="7,1,1,1" Content="New Provider" Command="{Binding NewProviderCommand}"/>
                  <Button Margin="7,1,1,1" Content="Import Providers" Command="{Binding ImportProvidersCommand}"/>
                  <Button Margin="7,1,1,1" Content="Add Manifest" Command="{Binding AddManifestCommand}"/>
                </StackPanel>
              </Expander.Header>
              <Expander.Content>
                <StackPanel Margin="0,8,0,0" Orientation="Horizontal">
                  <TextBlock x:Name="LogFileLabel" Text="Log File" Margin="0,0,7,0"
                             VerticalAlignment="Center" ToolTipService.ShowDuration="20000">
                    <TextBlock.ToolTip>
                      <ToolTip MaxWidth="400">
                        <TextBlock TextWrapping="Wrap">
                          <Run>When specified also writes events to a log file</Run>
                          <LineBreak/>
                          <LineBreak/>
                          <Run FontWeight="Bold">Note:</Run>
                          <Run>
                            Log files for real-time sessions can grow very quickly.
                            Real-time sessions flush at least once per second,
                            resulting in partially filled buffers being written to
                            the log file. For example if you use 64k buffers and the
                            logging rate is 1 event every second, ETW will write
                            64k/second to the log file.
                          </Run>
                        </TextBlock>
                      </ToolTip>
                    </TextBlock.ToolTip>
                  </TextBlock>
                  <TextBox Text="{Binding LogFileName, UpdateSourceTrigger=PropertyChanged}"
                           Width="250"
                           ToolTip="{Binding ToolTip, ElementName=LogFileLabel}"
                           ToolTipService.ShowDuration="20000"/>
                  <Button Content="…" MinWidth="0" Margin="4,1,1,1" Padding="10,0"
                          Command="{Binding BrowseLogFileCommand}"/>

                  <TextBlock Text="Flush Period" Margin="11,0,7,0" VerticalAlignment="Center"/>
                  <TextBox Text="{Binding FlushPeriod, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                           Width="50" ToolTipService.ShowDuration="20000">
                    <TextBox.ToolTip>
                      <ToolTip MaxWidth="400">
                        <TextBlock TextWrapping="Wrap">
                          <Run>
                            Specifies the interval in milliseconds at which in-use
                            ETW buffers allocated from the buffer pool are to be
                            flushed.
                          </Run>
                          <LineBreak/>
                          <LineBreak/>
                          <Run>
                            The OS-provided flush timer supports flush periods with
                            second resolution down to 1 second as the minimum
                            period. Shorter and higher resolution periods require
                            a custom timer (which supports by default around
                            15.6 millisecond resolution).
                          </Run>
                        </TextBlock>
                      </ToolTip>
                    </TextBox.ToolTip>
                  </TextBox>
                  <TextBlock Text="ms" VerticalAlignment="Center" Margin="3,0,3,0"/>

                  <TextBlock Text="Buffer Size" Margin="11,0,7,0" VerticalAlignment="Center"/>
                  <TextBox Text="{Binding BufferSize, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                           Width="50" ToolTip="Buffer size (defaults to 256 KiB)"/>
                  <TextBlock Text="KiB" VerticalAlignment="Center" Margin="3,0,3,0"/>

                  <TextBlock Text="Buffer Count" Margin="11,0,7,0" VerticalAlignment="Center"/>
                  <TextBox Text="{Binding MinimumBuffers, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                           Width="30" ToolTip="Minimum number of buffers (defaults to 4)"/>
                  <TextBlock Text="–" VerticalAlignment="Center" Margin="3,0,3,0"/>
                  <TextBox Text="{Binding MaximumBuffers, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                           Width="30" ToolTip="Maximum number of buffers (defaults to 24)"/>
                </StackPanel>
              </Expander.Content>
            </Expander>
          </Border>
          <Grid Margin="8">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="250" MinWidth="50"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition MinWidth="50"/>
            </Grid.ColumnDefinitions>
            <etkv:ProvidersListControl/>
            <GridSplitter Grid.Column="1" Width="7"
                          HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
            <ContentControl Grid.Column="2" Content="{Binding SelectedProvider}"/>
          </Grid>
        </DockPanel>
      </DataTemplate>
    </Grid.Resources>
    <Grid.RowDefinitions>
      <RowDefinition/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <DockPanel>
      <Border DockPanel.Dock="Top"
              Background="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarBorderBrushKey}}">
        <StackPanel Margin="8" Orientation="Horizontal">
          <StackPanel.Resources>
            <CollectionViewSource x:Key="SortedProfiles" Source="{Binding Profiles}"
                                  IsLiveSortingRequested="True">
              <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="Name"/>
              </CollectionViewSource.SortDescriptions>
              <CollectionViewSource.LiveSortingProperties>
                <system:String>Name</system:String>
              </CollectionViewSource.LiveSortingProperties>
            </CollectionViewSource>
          </StackPanel.Resources>
          <TextBlock VerticalAlignment="Center" FontWeight="Bold">Active Profile:</TextBlock>
          <c:ToggleContentControl Margin="7,1,1,1"
                                  VerticalContentAlignment="Center"
                                  IsChecked="{Binding IsInRenamingMode}"
                                  Width="250"
                                  Focusable="False">
            <c:ToggleContentControl.UncheckedTemplate>
              <DataTemplate>
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" MinHeight="20">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <ComboBox ItemsSource="{Binding Source={StaticResource SortedProfiles}}"
                            SelectedItem="{Binding ActiveProfile}" Margin="0">
                    <ComboBox.ItemTemplate>
                      <DataTemplate DataType="{x:Type etkv:TraceProfileViewModel}">
                        <TextBlock Text="{Binding Name}"/>
                      </DataTemplate>
                    </ComboBox.ItemTemplate>
                  </ComboBox>
                  <Button Grid.Column="1" x:Name="RenameButton"
                          Command="{Binding SwitchToRenamingModeCommand}"
                          ToolTip="Rename" Style="{DynamicResource ImageButton}"
                          VerticalAlignment="Center" Width="20" Height="20">
                    <imaging:CrispImage Moniker="{x:Static vsic:KnownMonikers.Edit}"
                                        Width="16" Height="16" Stretch="Uniform"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                  </Button>
                </Grid>
              </DataTemplate>
            </c:ToggleContentControl.UncheckedTemplate>
            <c:ToggleContentControl.CheckedTemplate>
              <DataTemplate>
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <Grid.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding SaveAndSwitchFromRenamingModeCommand}"/>
                    <KeyBinding Key="Escape" Command="{Binding DiscardAndSwitchFromRenamingModeCommand}"/>
                  </Grid.InputBindings>
                  <TextBox Grid.Column="0"
                           Text="{Binding NewName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}"
                           Margin="0"
                           Padding="1"
                           TextAlignment="Left"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           HorizontalContentAlignment="Stretch"
                           VerticalContentAlignment="Center"
                           HorizontalScrollBarVisibility="Hidden"
                           IsUndoEnabled="True"
                           AcceptsReturn="False"
                           AcceptsTab="False"
                           AllowDrop="False"
                           Loaded="ProfileNameTextBox_OnLoaded"/>
                </Grid>
              </DataTemplate>
            </c:ToggleContentControl.CheckedTemplate>
          </c:ToggleContentControl>
          <Button Margin="7,1,1,1" Content="New" Command="{Binding NewProfileCommand}"/>
          <Button Margin="7,1,1,1" Content="Copy" Command="{Binding CopyProfileCommand}"/>
          <Button Margin="7,1,1,1" Content="Delete" Command="{Binding DeleteProfileCommand}"/>
        </StackPanel>
      </Border>
      <ContentControl Content="{Binding ActiveProfile}" Focusable="False"/>
    </DockPanel>
    <Border Grid.Row="1" Background="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarGradientBrushKey}}">
      <StackPanel Margin="7" Orientation="Horizontal" HorizontalAlignment="Right">
        <Button Content="Restore" Command="{Binding RestoreCommand}"/>
        <Button Content="Save" IsDefault="True" Margin="7,1,1,1" Command="{Binding SaveCommand}"/>
        <Button Content="Cancel" IsCancel="True" Margin="7,1,1,1"/>
      </StackPanel>
    </Border>
  </Grid>
</c:ThemedDialogWindow>
