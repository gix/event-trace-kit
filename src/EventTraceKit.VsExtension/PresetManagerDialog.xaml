<etkvs:ThemedDialogWindow
  x:Class="EventTraceKit.VsExtension.PresetManagerDialog"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:etkc="clr-namespace:EventTraceKit.VsExtension.Controls"
  xmlns:etkvs="clr-namespace:EventTraceKit.VsExtension"
  xmlns:vsp="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
  mc:Ignorable="d"
  d:DataContext="{d:DesignInstance {x:Type etkvs:PresetManagerDesignTimeModel}, IsDesignTimeCreatable=True}"
  x:Name="Root"
  MinWidth="600"
  MinHeight="450"
  Width="900"
  Height="600"
  WindowStartupLocation="CenterOwner" ResizeMode="CanResize" ShowInTaskbar="False"
  Title="{Binding DisplayName, StringFormat='{}{0} View Editor'}">
  <etkvs:ThemedDialogWindow.Resources>
    <sys:Double x:Key="Double0P125">0.125</sys:Double>
    <sys:Double x:Key="Double0P25">0.25</sys:Double>
    <sys:Double x:Key="Double0P375">0.375</sys:Double>
    <sys:Double x:Key="Double0P5">0.5</sys:Double>
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <DataTemplate DataType="{x:Type etkvs:HeaderDropDownMenu}">
      <FrameworkTemplate.Resources>
      </FrameworkTemplate.Resources>
      <etkvs:DropDownBox x:Name="dropDownBox" VerticalAlignment="Center" ToolTip="{Binding ToolTip, Mode=OneWay}"
                     AutomationProperties.Name="{Binding AutomationName, Mode=OneWay}"
                     Background="Transparent">
        <etkvs:DropDownBox.Header>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="PresetNameTextBox" Grid.Column="0" Focusable="True" Margin="0,0,4,0"
                     Background="Transparent" Text="{Binding Header, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Image Grid.Column="1" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"
                 Margin="0,0,4,0"
                 Source="/Microsoft.Performance.UI;component/Resources/SplitButton.DownArrow.96.png"/>
          </Grid>
        </etkvs:DropDownBox.Header>
        <ContentControl.Content>
          <StackPanel>
            <ItemsControl HorizontalAlignment="Stretch"
                          Focusable="False"
                          KeyboardNavigation.TabNavigation="Continue"
                        KeyboardNavigation.DirectionalNavigation="Cycle"
                          ItemsSource="{Binding Path=ManagementCommands}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Button Margin="0,0,4,0" Width="60" Command="{Binding ExecuteCommand}"
                          AutomationProperties.Name="{Binding DisplayName}"
                          Focusable="{Binding IsEnabled}">
                    <StackPanel Orientation="Vertical">
                      <Border Background="Transparent">
                        <Image Stretch="Uniform" Height="20" Width="20" Source="{Binding IconUri}">
                          <FrameworkElement.Style>
                            <Style TargetType="{x:Type Image}">
                              <Style.Triggers>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                  <Setter Property="UIElement.Opacity" Value="0.25"/>
                                </Trigger>
                              </Style.Triggers>
                            </Style>
                          </FrameworkElement.Style>
                        </Image>
                      </Border>
                      <Label HorizontalAlignment="Center" Content="{Binding DisplayName}"
                             AutomationProperties.Name="{Binding DisplayName}"/>
                    </StackPanel>
                  </Button>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Separator BorderBrush="Black" BorderThickness="4"/>
            <ListView HorizontalAlignment="Stretch" Focusable="False" KeyboardNavigation.DirectionalNavigation="Cycle"
                    KeyboardNavigation.TabNavigation="Continue" ItemsSource="{Binding Path=Items}">
              <ItemsControl.ItemContainerStyle>
                <Style TargetType="{x:Type Control}">
                  <Setter Property="Focusable" Value="False"/>
                  <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                  <Setter Property="Background" Value="Transparent"/>
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ContentPresenter/>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </ItemsControl.ItemContainerStyle>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <MenuItem Background="Transparent" KeyboardNavigation.DirectionalNavigation="Continue"
                               KeyboardNavigation.TabNavigation="Continue" Header="{Binding DisplayName}"
                               Command="{Binding ExecuteCommand}" IsChecked="{Binding IsChecked}"
                               AutomationProperties.Name="{Binding DisplayName}"/>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ListView>
          </StackPanel>
        </ContentControl.Content>
      </etkvs:DropDownBox>
    </DataTemplate>

    <Style x:Key="AvailableColumnsListBoxItem" TargetType="{x:Type ListBoxItem}"
           BasedOn="{StaticResource {x:Type ListBoxItem}}">
      <Setter Property="AutomationProperties.Name" Value="{Binding Name, Mode=OneWay}"/>
      <EventSetter Event="Loaded" Handler="OnAvailableListItemLoaded"/>
      <EventSetter Event="Unloaded" Handler="OnAvailableListItemUnloaded"/>
    </Style>

    <etkvs:PresetManagerColumnContainerStyleSelector x:Key="LayoutListColumnStyleSelector">
      <etkvs:PresetManagerColumnContainerStyleSelector.ConfigurableColumnStyle>
        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
          <Setter Property="AutomationProperties.Name" Value="{Binding (AutomationProperties.Name), Mode=OneWay}"/>
          <EventSetter Event="Loaded" Handler="OnLayoutListItemLoaded"/>
          <EventSetter Event="Unloaded" Handler="OnLayoutListItemUnloaded"/>
          <EventSetter Event="DragEnter" Handler="OnLayoutListItemDragEnter"/>
          <EventSetter Event="DragOver" Handler="OnLayoutListItemDragOver"/>
          <EventSetter Event="Drop" Handler="OnLayoutListItemDrop"/>
          <Style.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsFrozen}" Value="True"/>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource {x:Static vsp:CommonControlsColors.ButtonDisabledBrushKey}}"/>
            </MultiDataTrigger>
          </Style.Triggers>
        </Style>
      </etkvs:PresetManagerColumnContainerStyleSelector.ConfigurableColumnStyle>
      <etkvs:PresetManagerColumnContainerStyleSelector.SeparatorColumnStyle>
        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
          <Setter Property="AutomationProperties.Name" Value="{Binding (AutomationProperties.Name), Mode=OneWay}"/>
          <Setter Property="Background" Value="Transparent"/>
          <Setter Property="BorderBrush" Value="{x:Null}"/>
          <Setter Property="BorderThickness" Value="0"/>
          <Setter Property="Margin" Value="0"/>
          <Setter Property="Padding" Value="1"/>
          <Setter Property="VerticalContentAlignment" Value="Center"/>
          <Setter Property="Visibility"
                  Value="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListViewItem}">
                <Border BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                  <Border x:Name="InnerBorder" BorderThickness="1" Margin="1">
                    <Border Height="4"
                            Background="{Binding Converter={x:Static etkvs:PresetManagerDialog.SeparatorToColorBrushConverter}}"/>
                  </Border>
                </Border>
                <ControlTemplate.Triggers>
                  <DataTrigger Value="True" Binding="{Binding IsFrozen}">
                    <Setter Property="Background" Value="{DynamicResource {x:Static vsp:CommonControlsColors.ButtonDisabledBrushKey}}"/>
                  </DataTrigger>
                  <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static vsp:TreeViewColors.SelectedItemActiveBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:TreeViewColors.SelectedItemActiveTextBrushKey}}"/>
                    <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF"/>
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsSelected" Value="True"/>
                      <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static vsp:TreeViewColors.SelectedItemInactiveBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:TreeViewColors.SelectedItemInactiveTextBrushKey}}"/>
                  </MultiTrigger>
                  <Trigger Property="IsEnabled" Value="False">
                    <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <EventSetter Event="Loaded" Handler="OnLayoutListItemLoaded"/>
          <EventSetter Event="Unloaded" Handler="OnLayoutListItemUnloaded"/>
          <EventSetter Event="DragEnter" Handler="OnLayoutListItemDragEnter"/>
          <EventSetter Event="DragOver" Handler="OnLayoutListItemDragOver"/>
          <EventSetter Event="Drop" Handler="OnLayoutListItemDrop"/>
        </Style>
      </etkvs:PresetManagerColumnContainerStyleSelector.SeparatorColumnStyle>
    </etkvs:PresetManagerColumnContainerStyleSelector>

    <etkvs:PresetManagerColumnDetailsTemplateSelector x:Key="DetailsTemplateSelector">
      <etkvs:PresetManagerColumnDetailsTemplateSelector.LeftFreezableAreaSeparatorColumnTemplate>
        <DataTemplate>
          <StackPanel>
            <TextBlock FontWeight="Bold" Padding="0,0,0,4" Text="Left Freezable Area Separator Column"/>
            <TextBlock TextWrapping="Wrap" Text="This column marks the edge of the left non-scrolling column region."/>
          </StackPanel>
        </DataTemplate>
      </etkvs:PresetManagerColumnDetailsTemplateSelector.LeftFreezableAreaSeparatorColumnTemplate>
      <etkvs:PresetManagerColumnDetailsTemplateSelector.RightFreezableAreaSeparatorColumnTemplate>
        <DataTemplate>
          <StackPanel>
            <TextBlock FontWeight="Bold" Padding="0,0,0,4" Text="Right Freezable Area Separator Column"/>
            <TextBlock TextWrapping="Wrap" Text="This column marks the edge of the right non-scrolling column region."/>
          </StackPanel>
        </DataTemplate>
      </etkvs:PresetManagerColumnDetailsTemplateSelector.RightFreezableAreaSeparatorColumnTemplate>
      <etkvs:PresetManagerColumnDetailsTemplateSelector.ConfigurableColumnTemplate>
        <DataTemplate DataType="{x:Type etkvs:PresetManagerColumnViewModel}">
          <FrameworkTemplate.Resources>
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="TextAlignmentValues">
              <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="TextAlignment"/>
              </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
              <Setter Property="VerticalAlignment" Value="Center"/>
              <Setter Property="Padding" Value="0"/>
            </Style>

            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
              <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

          </FrameworkTemplate.Resources>
          <StackPanel>
            <TextBlock FontWeight="Bold" Padding="0,0,0,4" Text="{Binding Name}"/>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Label Grid.Row="0" Grid.Column="0" Content="Text Alignment"
                     Margin="0,2,0,2"
                     Target="{x:Reference Name=textAlignmentComboBox}"/>
              <ComboBox x:Name="textAlignmentComboBox" Grid.Row="0" Grid.Column="1"
                        AutomationProperties.Name="Text Alignment"
                        Margin="4,2,0,2"
                        Padding="4,2"
                        VerticalAlignment="Center"
                        SelectedItem="{Binding TextAlignment}"
                        ItemsSource="{Binding Source={StaticResource TextAlignmentValues}}"/>

              <Label Grid.Row="1" Grid.Column="0" Content="Width"
                     Margin="0,2,0,2"
                     Target="{x:Reference widthTextBox}"/>
              <TextBox x:Name="widthTextBox" Grid.Row="1" Grid.Column="1"
                       AutomationProperties.Name="Width"
                       Margin="4,2,0,2"
                       VerticalAlignment="Center"
                       Text="{Binding Width, Converter={x:Static etkvs:PresetManagerDialog.WidthToStringConverter}}"/>

              <Label Grid.Row="2" Grid.Column="0" Content="Format"
                     Visibility="{Binding CellFormatVisibility, Mode=OneTime}"
                     Target="{x:Reference customFormatComboBox}"/>
              <ComboBox x:Name="customFormatComboBox" Grid.Row="2" Grid.Column="1"
                        AutomationProperties.Name="Format"
                        Margin="4,2,0,2"
                        Padding="4,2"
                        VerticalAlignment="Center"
                        IsEditable="False"
                        DisplayMemberPath="Description"
                        ItemsSource="{Binding SupportedFormats}"
                        Visibility="{Binding CellFormatVisibility, Mode=OneTime}"
                        SelectedItem="{Binding CellFormat, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemContainerStyle>
                  <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="AutomationProperties.Name" Value="{Binding Description, Mode=OneTime}"/>
                  </Style>
                </ItemsControl.ItemContainerStyle>
              </ComboBox>
            </Grid>
          </StackPanel>
        </DataTemplate>
      </etkvs:PresetManagerColumnDetailsTemplateSelector.ConfigurableColumnTemplate>
    </etkvs:PresetManagerColumnDetailsTemplateSelector>

    <Style x:Key="HeaderStyle" TargetType="{x:Type Border}">
      <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static vsp:HeaderColors.DefaultTextBrushKey}}"/>
      <Setter Property="Background" Value="{DynamicResource {x:Static vsp:HeaderColors.DefaultBrushKey}}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsp:HeaderColors.SeparatorLineBrushKey}}"/>
      <Setter Property="BorderThickness" Value="0,0,0,1"/>
      <Setter Property="Padding" Value="4"/>
    </Style>
  </etkvs:ThemedDialogWindow.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <Grid Row="0" Background="{Binding HeaderBrush, ElementName=Root, Mode=OneWay}">
      <StackPanel Orientation="Horizontal">
        <TextBlock Margin="4,0,0,0" VerticalAlignment="Center" Text="{Binding DisplayName}"/>
        <ContentControl Margin="4,0,0,0" Focusable="False" Content="{Binding PresetDropDownMenu}"/>
        <ContentControl Margin="4,0,0,0" Focusable="False" VerticalAlignment="Center" Content="{Binding AdvancedButton}"/>
      </StackPanel>
    </Grid>
    <Grid Grid.Row="1" Margin="7">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="175"
                          MinWidth="{Binding MinWidth, ElementName=Root, Converter={x:Static etkvs:PresetManagerDialog.MultiplierConverter}, ConverterParameter={StaticResource Double0P125}}"
                          MaxWidth="{Binding ActualWidth, ElementName=Root, Converter={x:Static etkvs:PresetManagerDialog.MultiplierConverter}, ConverterParameter={StaticResource Double0P375}}"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="500"
                          MinWidth="{Binding MinWidth, ElementName=Root, Converter={x:Static etkvs:PresetManagerDialog.MultiplierConverter}, ConverterParameter={StaticResource Double0P25}}"
                          MaxWidth="{Binding ActualWidth, ElementName=Root, Converter={x:Static etkvs:PresetManagerDialog.MultiplierConverter}, ConverterParameter={StaticResource Double0P5}}"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"
                          MinWidth="{Binding MinWidth, ElementName=Root, Converter={x:Static etkvs:PresetManagerDialog.MultiplierConverter}, ConverterParameter={StaticResource Double0P125}}"/>
      </Grid.ColumnDefinitions>

      <Border BorderThickness="1"
              BorderBrush="{DynamicResource {x:Static vsp:ThemedDialogColors.GridLineBrushKey}}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
          </Grid.RowDefinitions>
          <Border Grid.Row="0" Style="{StaticResource HeaderStyle}">
            <TextBlock Text="Available Columns"
                       TextTrimming="CharacterEllipsis"
                       ToolTip="Available Columns"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>
          </Border>

          <etkc:MultiDragListBox
            x:Name="availableList"
            Grid.Row="1"
            ItemsSource="{Binding TemplateColumns}"
            AllowDrop="True"
            SelectionMode="Extended"
            BorderThickness="0"
            Style="{StaticResource {x:Type ListBox}}"
            ItemContainerStyle="{StaticResource AvailableColumnsListBoxItem}">
            <ItemsControl.ItemTemplate>
              <DataTemplate DataType="{x:Type etkvs:PresetManagerColumnViewModel}">
                <TextBlock Text="{Binding Name}"/>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </etkc:MultiDragListBox>
        </Grid>
      </Border>

      <GridSplitter Grid.Column="1" Width="7"
                    HorizontalAlignment="Left" VerticalAlignment="Stretch"/>

      <etkc:MultiDragListView
        x:Name="layoutList"
        Grid.Column="2"
        AllowDrop="True"
        ItemsSource="{Binding PresetColumns}"
        SelectedItem="{Binding SelectedColumn}"
        BorderThickness="1"
        SelectionMode="Extended"
        ItemContainerStyleSelector="{StaticResource LayoutListColumnStyleSelector}">
        <etkc:MultiDragListView.View>
          <GridView>
            <GridViewColumn Header="Visible">
              <GridViewColumn.CellTemplate>
                <DataTemplate DataType="{x:Type etkvs:PresetManagerColumnViewModel}">
                  <CheckBox AutomationProperties.Name="Visible" IsChecked="{Binding IsVisible}"/>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="Name" Width="300">
              <GridViewColumn.CellTemplate>
                <DataTemplate DataType="{x:Type etkvs:PresetManagerColumnViewModel}">
                  <TextBlock Text="{Binding Name}">
                    <TextBlock.Style>
                      <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                          <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding IsVisible}" Value="False"/>
                              <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:CommonControlsColors.ButtonDisabledTextBrushKey}}"/>
                          </MultiDataTrigger>
                        </Style.Triggers>
                      </Style>
                    </TextBlock.Style>
                  </TextBlock>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
          </GridView>
        </etkc:MultiDragListView.View>
      </etkc:MultiDragListView>

      <GridSplitter Grid.Column="3" Width="7"
                    HorizontalAlignment="Left" VerticalAlignment="Stretch"/>

      <Border Grid.Column="4" BorderThickness="1"
              BorderBrush="{DynamicResource {x:Static vsp:ThemedDialogColors.GridLineBrushKey}}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
          </Grid.RowDefinitions>
          <Border Grid.Row="0" Style="{StaticResource HeaderStyle}">
            <TextBlock Text="Column Details" TextTrimming="CharacterEllipsis" ToolTip="Column Details"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Border>

          <ContentControl Grid.Row="1"
                          Margin="4"
                          Content="{Binding SelectedColumn}"
                          ContentTemplateSelector="{StaticResource DetailsTemplateSelector}"/>
        </Grid>
      </Border>
    </Grid>
    <Border Grid.Row="2" BorderBrush="LightGray" BorderThickness="0,1,0,0"
            Background="#D8D8D8" Padding="7">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Button Grid.Column="0" Click="SaveButtonClickHandler" Content="Manage…"/>
        <TextBlock Grid.Column="1" Text="{Binding AreFiltersValid}" FontWeight="Bold" Foreground="Red"
                   TextWrapping="WrapWithOverflow" Margin="7,0,7,0"/>
        <Button Grid.Column="2" Content="OK" Click="CloseButtonClickHandler" IsDefault="True" Margin="1,1,7,1"/>
        <Button Grid.Column="3" Content="Cancel" Click="CancelButtonClickHandler" IsCancel="True" Margin="1,1,7,1"/>
        <Button Grid.Column="4" Content="Apply" Click="ApplyButtonClickHandler"
                IsEnabled="{Binding CanApply}"/>
      </Grid>
    </Border>
  </Grid>
</etkvs:ThemedDialogWindow>
