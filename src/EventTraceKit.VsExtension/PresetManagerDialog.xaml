<etkvs:ThemedDialogWindow
  x:Class="EventTraceKit.VsExtension.PresetManagerDialog"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:etkvs="clr-namespace:EventTraceKit.VsExtension"
  xmlns:vsp="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
  mc:Ignorable="d"
  d:DataContext="{d:DesignInstance {x:Type etkvs:PresetManagerDesignTimeModel}, IsDesignTimeCreatable=True}"
  x:Name="root"
  MinWidth="600"
  MinHeight="450"
  Width="900"
  Height="600"
  WindowStartupLocation="CenterOwner" ResizeMode="CanResize" ShowInTaskbar="false"
  Title="{Binding DisplayName, StringFormat='{}{0} View Editor'}">
  <FrameworkElement.Resources>
    <sys:Double x:Key="double0p125">0.125</sys:Double>
    <sys:Double x:Key="double0p25">0.25</sys:Double>
    <sys:Double x:Key="double0p375">0.375</sys:Double>
    <sys:Double x:Key="double0p5">0.5</sys:Double>
    <BooleanToVisibilityConverter x:Key="boolToVisibleOrCollapsed"/>
    <LinearGradientBrush x:Key="AeroItemHoverFill" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#FFF1FBFF" Offset="0"/>
      <GradientStop Color="#FFD5F1FE" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AeroItemSelectedFill" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#FFD9F4FF" Offset="0"/>
      <GradientStop Color="#FF9BDDFB" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AeroItemSelectedInactiveFill" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#FFEEEDED" Offset="0"/>
      <GradientStop Color="#FFDDDDDD" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AeroItemSelectedHoverFill" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#FFEAF9FF" Offset="0"/>
      <GradientStop Color="#FFC9EDFD" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="availableColumnsListBoxItem" TargetType="{x:Type ListBoxItem}"
           BasedOn="{StaticResource {x:Type ListBoxItem}}">
      <Setter Property="AutomationProperties.Name" Value="{Binding Name, Mode=OneWay}"/>
      <Setter Property="HorizontalContentAlignment"
              Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
      <Setter Property="VerticalContentAlignment"
              Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
      <Setter Property="Padding" Value="2"/>
      <!--<Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBoxItem}">
            <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Background="{TemplateBinding Control.Background}" CornerRadius="2" SnapsToDevicePixels="true">
              <Border Name="InnerBorder" Background="Transparent" CornerRadius="1" BorderThickness="1">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="11"/>
                    <RowDefinition/>
                  </Grid.RowDefinitions>
                  <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF"/>
                  <ContentPresenter Grid.RowSpan="2" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Grid>
              </Border>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Value="{StaticResource AeroItemHoverFill}" Property="Control.Background"/>
                <Setter Property="Control.BorderBrush" Value="#FFCCF0FF"/>
                <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible"/>
              </Trigger>
              <Trigger Property="ListBoxItem.IsSelected" Value="true">
                <Setter Value="{StaticResource AeroItemSelectedFill}" Property="Control.Background"/>
                <Setter Property="Control.BorderBrush" Value="#FF98DDFB"/>
                <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF"/>
                <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                  <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Value="{StaticResource AeroItemSelectedInactiveFill}" Property="Control.Background"/>
                <Setter Property="Control.BorderBrush" Value="#FFCFCFCF"/>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                  <Condition Property="UIElement.IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Value="{StaticResource AeroItemSelectedHoverFill}" Property="Control.Background"/>
                <Setter Property="Control.BorderBrush" Value="#FF98DDFB"/>
              </MultiTrigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>-->
    </Style>
    <Style x:Key="ListViewItemFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle StrokeThickness="1" RadiusX="2" RadiusY="2" Stroke="#8E6EA6F5"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="flatComboBox" TargetType="{x:Type ComboBox}">
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="3"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <etkvs:PresetManagerColumnDetailsTemplateSelector x:Key="detailsTemplateSelector">
      <etkvs:PresetManagerColumnDetailsTemplateSelector.LeftFreezableAreaSeparatorColumnTemplate>
        <DataTemplate>
          <StackPanel>
            <TextBlock FontWeight="Bold" Text="Left Freezable Area Separator Column" Padding="0,4,4,4"/>
            <TextBlock TextWrapping="Wrap" Text="This column marks the edge of the left non-scrolling column region."
                       Padding="0,4,4,4"/>
          </StackPanel>
        </DataTemplate>
      </etkvs:PresetManagerColumnDetailsTemplateSelector.LeftFreezableAreaSeparatorColumnTemplate>
      <etkvs:PresetManagerColumnDetailsTemplateSelector.RightFreezableAreaSeparatorColumnTemplate>
        <DataTemplate>
          <StackPanel>
            <TextBlock FontWeight="Bold" Text="Right Freezable Area Separator Column" Padding="0,4,4,4"/>
            <TextBlock TextWrapping="Wrap" Text="This column marks the edge of the right non-scrolling column region."
                       Padding="0,4,4,4"/>
          </StackPanel>
        </DataTemplate>
      </etkvs:PresetManagerColumnDetailsTemplateSelector.RightFreezableAreaSeparatorColumnTemplate>
      <etkvs:PresetManagerColumnDetailsTemplateSelector.ConfigurableColumnTemplate>
        <DataTemplate DataType="{x:Type etkvs:PresetManagerColumnViewModel}">
          <FrameworkTemplate.Resources>
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="textAlignmentValues">
              <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="TextAlignment"/>
              </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
          </FrameworkTemplate.Resources>
          <StackPanel>
            <TextBlock FontWeight="Bold" Padding="0,4,4,4" Text="{Binding Name, StringFormat='{}{0} Details'}"/>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Label Grid.Row="0" Grid.Column="0" Padding="0,4,4,4" Content="Text Alignment: "
                     Target="{x:Reference Name=textAlignmentComboBox}"/>
              <ComboBox x:Name="textAlignmentComboBox" AutomationProperties.Name="Text Alignment"
                        VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" SelectedItem="{Binding TextAlignment}"
                        ItemsSource="{Binding Source={StaticResource textAlignmentValues}}"/>
              <Label Grid.Row="1" Grid.Column="0" Padding="0,4,4,4" Content="Width: "
                     Target="{x:Reference widthTextBox}"/>
              <TextBox x:Name="widthTextBox" AutomationProperties.Name="Width" Grid.Row="1" Grid.Column="1"
                       VerticalAlignment="Center"
                       Text="{Binding Width, Converter={x:Static etkvs:PresetManagerDialog.WidthToStringConverter}}"/>
              <Label Grid.Row="2" Grid.Column="0" Padding="0,4,4,4" Content="Custom format: "
                     Visibility="{Binding CellFormatVisibility, Mode=OneTime}"
                     Target="{x:Reference customFormatComboBox}"/>
              <ComboBox x:Name="customFormatComboBox" AutomationProperties.Name="Custom format" Grid.Row="2"
                        Grid.Column="1" VerticalAlignment="Center" IsEditable="false" DisplayMemberPath="Description"
                        Visibility="{Binding CellFormatVisibility, Mode=OneTime}"
                        SelectedItem="{Binding CellFormat, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding FormatValues}">
                <ItemsControl.ItemContainerStyle>
                  <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="AutomationProperties.Name" Value="{Binding Description, Mode=OneTime}"/>
                  </Style>
                </ItemsControl.ItemContainerStyle>
              </ComboBox>
              <Label Grid.Row="2" Grid.Column="0" Padding="0,4,4,4" Content="Thread Activity Table: "
                     Visibility="{Binding ThreadActivityTableVisibility, Mode=OneTime}"
                     Target="{x:Reference threadActivityComboBox}"/>
              <ComboBox x:Name="threadActivityComboBox" AutomationProperties.Name="Thread Activity Table" Grid.Row="3"
                        Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center" DisplayMemberPath="DisplayName"
                        IsEditable="false" Visibility="{Binding ThreadActivityTableVisibility, Mode=OneTime}"
                        SelectedItem="{Binding ThreadActivityTable, Mode=TwoWay}"
                        ItemsSource="{Binding ThreadActivityTables, Mode=OneTime}"/>
            </Grid>
            <etkvs:BindableRichTextBox BorderThickness="0" Focusable="false" IsReadOnly="true" Padding="0,20,4,4"
                                       Document="{Binding HelpTextDocument, Mode=OneWay}"/>
          </StackPanel>
        </DataTemplate>
      </etkvs:PresetManagerColumnDetailsTemplateSelector.ConfigurableColumnTemplate>
    </etkvs:PresetManagerColumnDetailsTemplateSelector>
    <etkvs:PresetManagerColumnContainerStyleSelector x:Key="layoutListColumnStyleSelector">
      <etkvs:PresetManagerColumnContainerStyleSelector.SeparatorColumnStyle>
        <Style TargetType="{x:Type ListViewItem}">
          <Setter Property="AutomationProperties.Name" Value="{Binding (AutomationProperties.Name), Mode=OneWay}"/>
          <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
          <Setter Property="Background" Value="Transparent"/>
          <Setter Property="BorderBrush" Value="Transparent"/>
          <Setter Property="BorderThickness" Value="1"/>
          <Setter Property="Margin" Value="0"/>
          <Setter Property="Padding" Value="5,2,5,2"/>
          <Setter Property="VerticalContentAlignment" Value="Center"/>
          <Setter Property="Visibility"
                  Value="{Binding IsVisible, Converter={StaticResource boolToVisibleOrCollapsed}}"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListViewItem}">
                <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        Background="{TemplateBinding Control.Background}" CornerRadius="0" SnapsToDevicePixels="true">
                  <Border Name="InnerBorder" Background="Transparent" CornerRadius="0" BorderThickness="1">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="11"/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                      <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF"/>
                      <Border Height="4"
                              Background="{Binding Converter={x:Static etkvs:PresetManagerDialog.SeparatorToColorBrushConverter}}"/>
                    </Grid>
                  </Border>
                </Border>
                <ControlTemplate.Triggers>
                  <DataTrigger Value="True" Binding="{Binding IsFrozen}">
                    <Setter Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Control.BorderBrush"/>
                    <Setter Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Control.Background"/>
                  </DataTrigger>
                  <Trigger Property="UIElement.IsMouseOver" Value="true">
                    <Setter Value="{StaticResource AeroItemHoverFill}" Property="Control.Background"/>
                    <Setter Property="Control.BorderBrush" Value="#FFCCF0FF"/>
                    <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible"/>
                  </Trigger>
                  <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Setter Value="{StaticResource AeroItemSelectedFill}" Property="Control.Background"/>
                    <Setter Property="Control.BorderBrush" Value="#FF98DDFB"/>
                    <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF"/>
                    <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible"/>
                    <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF"/>
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                      <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Value="{StaticResource AeroItemSelectedInactiveFill}" Property="Control.Background"/>
                    <Setter Property="Control.BorderBrush" Value="#FFCFCFCF"/>
                  </MultiTrigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                      <Condition Property="UIElement.IsMouseOver" Value="true"/>
                    </MultiTrigger.Conditions>
                    <Setter Value="{StaticResource AeroItemSelectedHoverFill}" Property="Control.Background"/>
                    <Setter Property="Control.BorderBrush" Value="#FF98DDFB"/>
                  </MultiTrigger>
                  <Trigger Property="UIElement.IsEnabled" Value="false">
                    <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </etkvs:PresetManagerColumnContainerStyleSelector.SeparatorColumnStyle>
      <etkvs:PresetManagerColumnContainerStyleSelector.ConfigurableColumnStyle>
        <Style TargetType="{x:Type ListViewItem}">
          <Setter Property="AutomationProperties.Name" Value="{Binding (AutomationProperties.Name), Mode=OneWay}"/>
          <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
          <Setter Property="Background" Value="Transparent"/>
          <Setter Property="BorderBrush" Value="Transparent"/>
          <Setter Property="BorderThickness" Value="1"/>
          <Setter Property="Margin" Value="0"/>
          <Setter Property="Padding" Value="0"/>
          <Setter Property="VerticalContentAlignment" Value="Center"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListViewItem}">
                <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        Background="{TemplateBinding Control.Background}" CornerRadius="2" SnapsToDevicePixels="true">
                  <Border Name="InnerBorder" Background="Transparent" CornerRadius="1" BorderThickness="1">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="11"/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                      <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF"/>
                      <GridViewRowPresenter Grid.RowSpan="2" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    </Grid>
                  </Border>
                </Border>
                <ControlTemplate.Triggers>
                  <DataTrigger Value="True" Binding="{Binding IsFrozen}">
                    <Setter Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Control.BorderBrush"/>
                    <Setter Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Control.Background"/>
                  </DataTrigger>
                  <Trigger Property="UIElement.IsMouseOver" Value="true">
                    <Setter Value="{StaticResource AeroItemHoverFill}" Property="Control.Background"/>
                    <Setter Property="Control.BorderBrush" Value="#FFCCF0FF"/>
                    <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible"/>
                  </Trigger>
                  <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Setter Value="{StaticResource AeroItemSelectedFill}" Property="Control.Background"/>
                    <Setter Property="Control.BorderBrush" Value="#FF98DDFB"/>
                    <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF"/>
                    <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible"/>
                    <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF"/>
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                      <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Value="{StaticResource AeroItemSelectedInactiveFill}" Property="Control.Background"/>
                    <Setter Property="Control.BorderBrush" Value="#FFCFCFCF"/>
                  </MultiTrigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                      <Condition Property="UIElement.IsMouseOver" Value="true"/>
                    </MultiTrigger.Conditions>
                    <Setter Value="{StaticResource AeroItemSelectedHoverFill}" Property="Control.Background"/>
                    <Setter Property="Control.BorderBrush" Value="#FF98DDFB"/>
                  </MultiTrigger>
                  <Trigger Property="UIElement.IsEnabled" Value="false">
                    <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </etkvs:PresetManagerColumnContainerStyleSelector.ConfigurableColumnStyle>
    </etkvs:PresetManagerColumnContainerStyleSelector>
    <Style x:Key="HeaderStyle" TargetType="{x:Type Border}">
      <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static vsp:HeaderColors.DefaultTextBrushKey}}"/>
      <Setter Property="Background" Value="{DynamicResource {x:Static vsp:HeaderColors.DefaultBrushKey}}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsp:HeaderColors.SeparatorLineBrushKey}}"/>
      <Setter Property="BorderThickness" Value="0,0,0,1"/>
      <Setter Property="Padding" Value="4"/>
    </Style>
  </FrameworkElement.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid Row="0" Background="{Binding ElementName=root, Path=HeaderBrush, Mode=OneWay}">
      <StackPanel Orientation="Horizontal">
        <TextBlock Margin="4,0,0,0" VerticalAlignment="Center" Text="{Binding DisplayName}"/>
        <ContentControl Margin="4,0,0,0" Focusable="false" Content="{Binding PresetDropDownMenu}"/>
        <ContentControl Margin="4,0,0,0" Focusable="false" VerticalAlignment="Center" Content="{Binding AdvancedButton}"/>
      </StackPanel>
    </Grid>
    <Grid Grid.Row="1" Margin="11">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="175"
                          MinWidth="{Binding ElementName=root, Path=MinWidth, Converter={x:Static etkvs:PresetManagerDialog.MultiplierConverter}, ConverterParameter={StaticResource double0p125}}"
                          MaxWidth="{Binding ElementName=root, Path=ActualWidth, Converter={x:Static etkvs:PresetManagerDialog.MultiplierConverter}, ConverterParameter={StaticResource double0p375}}"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="500"
                          MinWidth="{Binding ElementName=root, Path=MinWidth, Converter={x:Static etkvs:PresetManagerDialog.MultiplierConverter}, ConverterParameter={StaticResource double0p25}}"
                          MaxWidth="{Binding ElementName=root, Path=ActualWidth, Converter={x:Static etkvs:PresetManagerDialog.MultiplierConverter}, ConverterParameter={StaticResource double0p5}}"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"
                          MinWidth="{Binding ElementName=root, Path=MinWidth, Converter={x:Static etkvs:PresetManagerDialog.MultiplierConverter}, ConverterParameter={StaticResource double0p125}}"/>
      </Grid.ColumnDefinitions>
      <Border Style="{StaticResource HeaderStyle}">
        <TextBlock Text="Available Columns" TextTrimming="CharacterEllipsis"
                   ToolTip="Available Columns" HorizontalAlignment="Center" VerticalAlignment="Center"/>
      </Border>
      <Grid Row="1" RowSpan="2" Column="0">
        <ListBox x:Name="availableList"
                 ItemsSource="{Binding TemplateColumns}"
                 AllowDrop="true" Drop="AvailableListDropHandler" IsEnabled="False">
          <ItemsControl.ItemTemplate>
            <DataTemplate DataType="{x:Type etkvs:PresetManagerColumnViewModel}">
              <TextBlock Text="{Binding Name}"/>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ListBox>
      </Grid>

      <GridSplitter Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" Width="11"
                    HorizontalAlignment="Left" VerticalAlignment="Stretch"/>

      <Grid Grid.Row="0" RowSpan="2" Column="2">
        <ListView Drop="LayoutListDropHandler" x:Name="layoutList" AllowDrop="true"
                  BorderThickness="1"
                  ItemContainerStyleSelector="{StaticResource layoutListColumnStyleSelector}"
                  SelectedItem="{Binding SelectedColumn}" ItemsSource="{Binding PresetColumns}">
          <ListView.View>
            <GridView>
              <GridViewColumn Header="Visible">
                <GridViewColumn.CellTemplate>
                  <DataTemplate DataType="{x:Type etkvs:PresetManagerColumnViewModel}">
                    <CheckBox AutomationProperties.Name="Visible" IsChecked="{Binding IsVisible}"/>
                  </DataTemplate>
                </GridViewColumn.CellTemplate>
              </GridViewColumn>
              <GridViewColumn Header="Name">
                <GridViewColumn.CellTemplate>
                  <DataTemplate DataType="{x:Type etkvs:PresetManagerColumnViewModel}">
                    <TextBlock Text="{Binding Name}">
                      <FrameworkElement.Style>
                        <Style TargetType="{x:Type TextBlock}">
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                              <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </FrameworkElement.Style>
                    </TextBlock>
                  </DataTemplate>
                </GridViewColumn.CellTemplate>
              </GridViewColumn>
            </GridView>
          </ListView.View>
        </ListView>
      </Grid>
      <Border Grid.Row="2" Grid.Column="2" BorderBrush="LightGray" BorderThickness="0,1,0,0">
        <StackPanel Margin="0,2,0,2">
          <CheckBox Content="Show Freeze Bars" IsChecked="{Binding ShowFreezeBars}"/>
        </StackPanel>
      </Border>

      <GridSplitter Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" Width="11"
                    HorizontalAlignment="Left" VerticalAlignment="Stretch"/>

      <Border Grid.Row="0" Grid.Column="4" Style="{StaticResource HeaderStyle}">
        <TextBlock Text="Column Details" TextTrimming="CharacterEllipsis" ToolTip="Column Details"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
      </Border>
      <Grid Grid.Row="1" Grid.Column="4">
        <ContentControl Margin="4" ContentTemplateSelector="{StaticResource detailsTemplateSelector}"
                        Content="{Binding SelectedColumn}"/>
      </Grid>
    </Grid>
    <Border Grid.Row="2" BorderBrush="LightGray" BorderThickness="0,1,0,0"
            Background="#D8D8D8" Padding="7">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Button Grid.Column="0" Click="SaveButtonClickHandler" Content="Manage…"/>
        <TextBlock Grid.Column="1" Text="{Binding AreFiltersValid}" FontWeight="Bold" Foreground="Red"
                   TextWrapping="WrapWithOverflow" Margin="7,0,7,0"/>
        <Button Grid.Column="2" Content="OK" Click="CloseButtonClickHandler" IsDefault="true" Margin="1,1,7,1"/>
        <Button Grid.Column="3" Content="Cancel" Click="CancelButtonClickHandler" IsCancel="true" Margin="1,1,7,1"/>
        <Button Grid.Column="4" Content="Apply" Click="ApplyButtonClickHandler"
                IsEnabled="{Binding IsApplyEnabled}"/>
      </Grid>
    </Border>
    <Grid Grid.Row="3" Margin="11">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition/>
        <ColumnDefinition/>
        <ColumnDefinition/>
      </Grid.ColumnDefinitions>
      <CheckBox x:Name="enableFlag" IsChecked="True"/>
      <ListBox Grid.Row="1" Margin="5" IsEnabled="{Binding IsChecked, ElementName=enableFlag}">
        <ListBoxItem>Foo Bar Baz Foo Bar Baz Foo Bar Baz Foo Bar Baz</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
        <ListBoxItem>Foo</ListBoxItem>
      </ListBox>
      <ListView Grid.Row="1" Grid.Column="1" Margin="5"
                IsEnabled="{Binding IsChecked, ElementName=enableFlag}">
        <ListView>Foo Bar Baz Foo Bar Baz Foo Bar Baz Foo Bar Baz</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
        <ListView>Foo</ListView>
      </ListView>
      <ListView Grid.Row="1" Grid.Column="2" Margin="5" ItemsSource="{Binding ConfigurablePresetColumns}"
                IsEnabled="{Binding IsChecked, ElementName=enableFlag}">
        <ListView.View>
          <GridView>
            <GridView.Columns>
              <GridViewColumn Header="Visible" DisplayMemberBinding="{Binding IsVisible}"/>
              <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}"/>
              <GridViewColumn Header="Width" DisplayMemberBinding="{Binding Width}"/>
            </GridView.Columns>
          </GridView>
        </ListView.View>
      </ListView>
      <DataGrid Grid.Row="1" Grid.Column="3" Margin="5" ItemsSource="{Binding ConfigurablePresetColumns}"
                IsReadOnly="True" IsEnabled="{Binding IsChecked, ElementName=enableFlag}">
        <DataGrid.Columns>
          <DataGridTextColumn Header="Visible" Binding="{Binding IsVisible}"/>
          <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
          <DataGridTextColumn Header="Width" Binding="{Binding Width}"/>
        </DataGrid.Columns>
      </DataGrid>
    </Grid>
  </Grid>
</etkvs:ThemedDialogWindow>
