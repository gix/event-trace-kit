<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         ToolsVersion="15.0" DefaultTargets="Pack">
  <ItemGroup>
    <ProjectItem Include="src\EventManifestCompiler\EventManifestCompiler.csproj"/>
    <ProjectItem Include="src\EventManifestCompiler.Tests\EventManifestCompiler.Tests.csproj"/>
    <ProjectItem Include="src\EventManifestCompiler.Build.Tasks\EventManifestCompiler.Build.Tasks.csproj"/>
    <ProjectItem Include="src\EventManifestCompiler.Build.Tasks.Tests\EventManifestCompiler.Build.Tasks.Tests.csproj"/>
    <ProjectItem Include="src\EventTraceKit.EventTracing\EventTraceKit.EventTracing.csproj"/>
    <ProjectItem Include="src\EventTraceKit.EventTracing.Tests\EventTraceKit.EventTracing.Tests.csproj"/>
  </ItemGroup>
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
    <PackageDir>$(MSBuildThisFileDirectory)dist</PackageDir>
    <BuildQuality Condition="'$(BuildQuality)' == ''">PerBuildPreRelease</BuildQuality>

    <BuildNumber Condition="'$(BuildNumber)' == ''">$(BUILD_BUILDNUMBER)</BuildNumber>
    <BuildNumber Condition="'$(BuildNumber)' == '' AND '$(OfficialBuild)' != 'true'">$([System.DateTime]::UtcNow.ToString(`yyyyMMdd.HHmm`))</BuildNumber>

    <BuildProperties>Configuration=$(Configuration);Platform=AnyCPU;BuildNumber=$(BuildNumber)</BuildProperties>
    <PackProperties>$(BuildProperties);IncludeSource=true</PackProperties>

    <ToolsDir>$(MSBuildThisFileDirectory)tools\</ToolsDir>
  </PropertyGroup>

  <Import Project="src\Build\Settings.props" />

  <Target Name="Clean" Condition="'$(Clean)' != 'false'">
    <MSBuild Projects="@(ProjectItem)"
             Properties="$(BuildProperties)"
             Targets="Clean"
             BuildInParallel="true"
             StopOnFirstFailure="true"/>
    <RemoveDir Directories="build\release" ContinueOnError="WarnAndContinue"/>
    <RemoveDir Directories="build\release"/>
  </Target>

  <Target Name="Restore" Condition="'$(Restore)' != 'false'">
    <MSBuild Projects="@(ProjectItem)"
             Properties="$(BuildProperties)"
             Targets="Restore"
             BuildInParallel="true"
             StopOnFirstFailure="true"/>
  </Target>

  <Target Name="Build" DependsOnTargets="Restore" Condition="'$(Build)' != 'false'">
    <MSBuild Projects="@(ProjectItem)"
             Properties="$(BuildProperties)"
             BuildInParallel="true"
             StopOnFirstFailure="true"/>
  </Target>

  <Target Name="GetXunit">
    <PropertyGroup>
      <XunitRunner32>$(ToolsDir)xunit.runner.console.2.3.1\tools\net452\xunit.console.x86.exe</XunitRunner32>
    </PropertyGroup>
    <Exec Condition="!Exists('$(XunitRunner32)')"
          Command="nuget install xunit.runner.console -Version 2.3.1 -OutputDirectory &quot;$(ToolsDir.TrimEnd('\'))&quot;"/>
  </Target>

  <Target Name="Test" DependsOnTargets="Build;GetXunit" Condition="'$(Test)' != 'false'">
    <ItemGroup>
      <TestAssemblies Include="build\release\bin\EventManifestCompiler.Build.Tasks.Tests\**\EventManifestCompiler.Build.Tasks.Tests.dll"/>
      <TestAssemblies Include="build\release\bin\EventTraceKit.EventTracing.Tests\**\EventTraceKit.EventTracing.Tests.dll"/>
    </ItemGroup>
    <Exec Command="&quot;$(XunitRunner32)&quot; @(TestAssemblies, ' ')"/>
  </Target>

  <Target Name="Pack" DependsOnTargets="Build;Test">
    <PropertyGroup>
      <PackArgs>-Symbols -NoPackageAnalysis -OutputDirectory "$(PackageDir)"</PackArgs>
      <PackArgs Condition="'$(BuildQuality)' == 'Release'">$(PackArgs) -Version "$(NuGetReleaseVersion)"</PackArgs>
      <PackArgs Condition="'$(BuildQuality)' == 'PreRelease'">$(PackArgs) -Version "$(NuGetPreReleaseVersion)"</PackArgs>
      <PackArgs Condition="'$(BuildQuality)' == 'PerBuildPreRelease'">$(PackArgs) -Version "$(NuGetPerBuildPreReleaseVersion)"</PackArgs>
    </PropertyGroup>
    <MakeDir Directories="$(PackageDir)"/>
    <Exec Command="nuget.exe pack $(PackArgs) src\EventManifestCompiler.Build.Tasks.nuspec"/>
  </Target>

  <Target Name="BuildDocs">
    <Exec Command="docfx.exe Docs/docfx.json -f"/>
  </Target>

  <Target Name="EnsureCleanWorkingDir">
    <Exec Command="git diff --cached --exit-code &gt; NUL" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
    </Exec>
    <Error Text="Working directory has staged changes." Condition="'$(ErrorCode)' != '0'"/>
  </Target>

  <Target Name="Publish" DependsOnTargets="Build;GetVersion">
    <PropertyGroup>
      <PushArgs>&quot;dist/EventManifestCompiler.Build.Tasks.$(NuGetReleaseVersion).nupkg&quot;</PushArgs>
      <PushArgs>$(PushArgs) -Source https://www.nuget.org/api/v2/package</PushArgs>
    </PropertyGroup>
    <Exec Command="nuget push $(PushArgs)"/>
  </Target>
</Project>
